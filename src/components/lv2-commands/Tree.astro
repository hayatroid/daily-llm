---
// Tree: display directory structure
import { getCollection } from 'astro:content';
import { Tree as TreeLib } from '../../lib/navigation';
import Shell from '../lv1-shell/Shell.astro';

export interface Props {
  slug: string; // "" | "2024-01-15" | "2024-01-15/001-article-slug"
}

const { slug } = Astro.props;

const allEntries = await getCollection('daily');
const TreeNodes = TreeLib.build(allEntries, slug);
---

<Shell command="tree">
  <div class="tree">
    {
      TreeNodes.map((item) => (
        <div class="tree-item" data-level={item.level}>
          <a href={item.href} class="tree-link">
            {item.text} {item.gem && <span class="gem">ðŸ’Ž</span>}
          </a>
        </div>
      ))
    }
  </div>
</Shell>

<style lang="scss">
  .tree {
    font-family: var(--font-mono);
    font-size: var(--text-normal);
    line-height: var(--line-height-compact);
  }

  .tree-item {
    display: flex;
    align-items: baseline;
    gap: var(--gap-default);
    margin-bottom: calc((1.6 - 1) * var(--space-md) / 2);

    &[data-level='0'] {
      margin-left: calc(0 * var(--tree-indent));
    }
    &[data-level='1'] {
      margin-left: calc(1 * var(--tree-indent));
    }
    &[data-level='2'] {
      margin-left: calc(2 * var(--tree-indent));
    }
    &[data-level='3'] {
      margin-left: calc(3 * var(--tree-indent));
    }
  }

  .gem {
    margin-left: var(--space-xs);
  }

  /* Mobile responsive */
  @media (max-width: var(--bp-mobile)) {
    .tree-item {
      &[data-level='1'],
      &[data-level='2'],
      &[data-level='3'] {
        flex-direction: column;
        gap: var(--space-xs);
      }
    }
  }
</style>
