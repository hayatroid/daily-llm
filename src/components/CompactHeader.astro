---
export interface Props {
  title: string;
  subtitle?: string;
  icon?: string;
  level?: 1 | 2 | 3;
  variant?: 'page' | 'section';
}

const { 
  title, 
  subtitle, 
  icon, 
  level = 1, 
  variant = 'page' 
} = Astro.props;

const HeadingTag = `h${level}` as any;
---

<header class:list={['compact-header', `compact-header--${variant}`]}>
  <HeadingTag class="compact-title">
    {icon && <span class="title-icon">{icon}</span>}
    {title}
  </HeadingTag>
  {subtitle && <p class="compact-subtitle">{subtitle}</p>}
</header>

<style>
  .compact-header {
    text-align: center;
    margin-bottom: var(--space-xl);
    padding: var(--space-md) 0;
  }

  .compact-header--page {
    border-bottom: 1px solid var(--term-dim);
  }

  .compact-header--section {
    text-align: left;
    margin-bottom: var(--space-lg);
    padding-bottom: var(--space-sm);
    border-bottom: 1px solid var(--term-dim);
  }

  .compact-title {
    color: var(--term-green);
    margin: 0 0 var(--space-xs) 0;
    font-size: var(--text-h1-size);
    font-weight: var(--text-weight-medium);
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    justify-content: center;
  }

  .compact-header--section .compact-title {
    font-size: var(--text-h2-size);
    color: var(--term-amber);
    justify-content: flex-start;
  }

  .title-icon {
    font-size: 0.9em;
  }

  .compact-subtitle {
    color: var(--term-dim);
    margin: 0;
    font-size: 0.9rem;
  }

  /* Responsive design */
  @media (max-width: 767px) {
    .compact-header {
      padding: var(--space-sm) 0;
    }
    
    .compact-title {
      font-size: var(--text-h1-mobile);
    }
    
    .compact-header--section .compact-title {
      font-size: var(--text-h2-mobile);
    }
  }
</style>