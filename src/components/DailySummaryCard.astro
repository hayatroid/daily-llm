---
import CardContainer from './CardContainer.astro';
import StatsBadge from './StatsBadge.astro';
import { calculateDateStatistics } from '../utils/dateStatistics.js';
import { ICONS, LABELS } from '../utils/icons.js';
import { createDateUrl } from '../utils/slugUtils.js';

export interface Props {
  summary: {
    frontmatter: {
      date: string;
      conversations: number;
      highlights: string[];
    };
    Content: any;
    rawContent: () => string;
  };
  allContent?: any[];
}

const { summary, allContent = [] } = Astro.props;
const { frontmatter } = summary;

// Calculate statistics using the utility function
const stats = calculateDateStatistics(frontmatter.date, allContent);
---

<CardContainer variant="compact" hoverable>
  <header class="summary-header">
    <h2 class="date-title">{ICONS.CALENDAR} {frontmatter.date}</h2>
    <div class="stats">
      <StatsBadge icon={ICONS.CONVERSATION} value={stats.conversations} label={LABELS.CONVERSATIONS} />
      {stats.totalExchanges > 0 && (
        <StatsBadge icon={ICONS.EXCHANGE} value={stats.totalExchanges} label={LABELS.EXCHANGES} />
      )}
      {stats.topicCount > 0 && (
        <StatsBadge icon={ICONS.TAG} value={stats.topicCount} label={LABELS.TOPICS} />
      )}
      {stats.hasCodeCount > 0 && (
        <StatsBadge icon={ICONS.CODE} value={stats.hasCodeCount} label={LABELS.WITH_CODE} />
      )}
    </div>
  </header>

  {frontmatter.highlights && frontmatter.highlights.length > 0 && (
    <div class="highlights-preview">
      <h3 class="highlights-title">Key Insights</h3>
      <ul class="highlights-list">
        {frontmatter.highlights.slice(0, 3).map((highlight: string) => (
          <li class="highlight-item">{ICONS.HIGHLIGHT} {highlight}</li>
        ))}
        {frontmatter.highlights.length > 3 && (
          <li class="more-highlights">
            <span class="meta-info">+{frontmatter.highlights.length - 3} more insights</span>
          </li>
        )}
      </ul>
    </div>
  )}

  <footer class="summary-actions">
    <a href={createDateUrl(frontmatter.date)} class="view-all-btn">
      <span class="command">cd {frontmatter.date}/</span>
      <span class="arrow">{ICONS.ARROW_RIGHT}</span>
    </a>
  </footer>
</CardContainer>

<style>
  .daily-summary-card {
    margin-bottom: 1.5rem;
  }

  .summary-header {
    margin-bottom: 1rem;
  }

  .date-title {
    color: var(--term-green);
    margin: 0 0 0.75rem 0;
    font-size: 1.25rem;
    font-weight: bold;
  }

  .stats {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin-bottom: 0.5rem;
  }


  .highlights-preview {
    margin-bottom: 1rem;
  }

  .highlights-title {
    color: var(--term-amber);
    font-size: 1rem;
    margin: 0 0 0.5rem 0;
    font-weight: bold;
  }

  .highlights-list {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .highlight-item {
    color: var(--term-text);
    margin-bottom: 0.5rem;
    line-height: 1.4;
    font-size: 0.9rem;
  }

  .more-highlights {
    margin-top: 0.5rem;
  }

  .meta-info {
    color: var(--term-dim);
    font-style: italic;
    font-size: 0.8rem;
  }

  .summary-actions {
    border-top: 1px solid var(--term-gray);
    padding-top: 0.75rem;
    margin-top: 0.75rem;
  }

  .view-all-btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--term-amber);
    text-decoration: none;
    font-size: 0.9rem;
    transition: color 0.2s ease;
  }

  .view-all-btn:hover {
    color: var(--term-green);
    text-decoration: underline;
  }

  .arrow {
    font-size: 0.8rem;
    transition: transform 0.2s ease;
  }

  .view-all-btn:hover .arrow {
    transform: translateX(2px);
  }

  /* Responsive design */
  @media (max-width: 767px) {
    .daily-summary-card {
      margin-bottom: 1rem;
    }

    .stats {
      gap: 0.5rem;
    }

    .date-title {
      font-size: 1.1rem;
    }
  }
</style>