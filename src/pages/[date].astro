---
import { getCollection, getEntry } from 'astro:content';
import Layout from '../components/lv3-layout/Layout.astro';
import Pwd from '../components/lv2-commands/Pwd';
import Tree from '../components/lv2-commands/Tree';
import Cat from '../components/lv2-commands/Cat';
import { Tree as TreeLib } from '../lib/navigation';
import { StaticPaths } from '../lib/content';
import { createRoute, routeToSlug, routeToUrl, parseSlug } from '../lib/routes';

export async function getStaticPaths() {
  return await StaticPaths.getDates();
}

const { date } = Astro.params;

// Route型を使ってslugを構築
const route = date ? createRoute.date(date) : createRoute.root();
const slug = routeToSlug(route);
const pageTitle = `${date} - Daily LLM Conversations`;

// Catコンポーネント用のデータを取得
const entry = await getEntry('daily', slug);
if (!entry) {
  throw new Error(`Content not found for slug: ${slug}`);
}
const { data } = entry;
const { Content } = await entry.render();
const displayPath = routeToUrl(parseSlug(slug));

// Treeコンポーネント用のデータを取得
const allEntries = await getCollection('daily');
const treeNodes = TreeLib.build(allEntries, slug);
---

<Layout title={pageTitle}>
  <Pwd slug={slug} client:load />
  <Cat
    command={`cat ${displayPath}`}
    title={data.title}
    gem={data.gem}
    client:load
  >
    <Content />
  </Cat>
  <Tree nodes={treeNodes} client:load />
</Layout>
