---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Pwd from '../../components/Pwd.astro';
import Prompt from '../../components/Prompt.astro';

// Get all content files
const allContent = await Astro.glob('../../../content/**/*.md');

// Extract all tags and count conversations for each
const tagCounts = new Map();
allContent
  .filter(file => !file.file.endsWith('summary.md')) // Only conversations have tags
  .forEach(file => {
    if (file.frontmatter.tags && Array.isArray(file.frontmatter.tags)) {
      file.frontmatter.tags.forEach(tag => {
        tagCounts.set(tag, (tagCounts.get(tag) || 0) + 1);
      });
    }
  });

// Sort tags alphabetically
const sortedTags = Array.from(tagCounts.keys()).sort((a, b) => 
  a.toLowerCase().localeCompare(b.toLowerCase())
);

const pageTitle = "Tags - Daily LLM Conversations";
---

<BaseLayout title={pageTitle}>
  <div class="main-content">
    <div class="section-gap">
      <Pwd 
        currentPage="tags-index"
        allContent={allContent}
      />
    </div>

    <div class="terminal-session">
      <div class="command-block">
        <Prompt command="tree tags" />
      </div>
      
      <div class="tree-output">
        <div class="tree-level-0">
          <a href="/tags/" class="tree-link">tags/</a>
        </div>
        
        {sortedTags.map((tag) => {
          const count = tagCounts.get(tag);
          
          return (
            <div class="tree-level-1">
              <a href={`/tags/${encodeURIComponent(tag)}/`} class="tree-link">#{tag}</a>
              <span class="tree-meta">{count} conversation{count !== 1 ? 's' : ''}</span>
            </div>
          );
        })}
        
        {sortedTags.length === 0 && (
          <div class="tree-level-1">
            <span class="tree-meta">(no tags found)</span>
          </div>
        )}
      </div>
    </div>

    <!-- Navigation Commands -->
    <div class="command-block">
      <Prompt command="cd ../" clickable={true} href="/" />
    </div>
  </div>
</BaseLayout>

<style>
  .tree-output {
    line-height: var(--line-height-normal);
  }


  /* Responsive */
  @media (max-width: var(--bp-mobile)) {
    .tree-level-1 {
      flex-direction: column;
      gap: var(--space-xs);
    }
    
    .tree-meta {
      margin-left: 0;
    }
  }
</style>