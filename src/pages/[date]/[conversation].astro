---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Pwd from '../../components/Pwd.astro';
import Cat from '../../components/Cat.astro';
import Prompt from '../../components/Prompt.astro';
import { processConversation } from '../../utils/contentProcessor.js';
import { createDateUrl, extractSlugFromFile } from '../../utils/slugUtils.js';

export async function getStaticPaths() {
  // Get all conversation files (exclude summaries)
  const conversations = await Astro.glob('../../../content/**/*.md');
  const conversationFiles = conversations.filter(file => 
    !file.file.endsWith('summary.md')
  );
  
  return conversationFiles.map((conversation) => {
    const pathParts = conversation.file.split('/');
    const date = pathParts[pathParts.length - 2]; // Get date from path
    const filename = pathParts[pathParts.length - 1].replace('.md', ''); // Remove .md
    
    return {
      params: { 
        date: date,
        conversation: filename
      },
      props: { conversation }
    };
  });
}

const { date, conversation: conversationSlug } = Astro.params;
const { conversation } = Astro.props;
const { frontmatter, Content, rawContent } = conversation;

// Process the conversation for metadata
const processed = processConversation(rawContent());

// Get all content for navigation context
const allContent = await Astro.glob('../../../content/**/*.md');

// Generate navigation context for conversation navigation (within same date)
const sameDateConversations = allContent
  .filter(file => file.file.includes(`/${date}/`) && !file.file.endsWith('summary.md'))
  .sort((a, b) => {
    const aNum = parseInt(a.file.split('/').pop()?.split('-')[0] || '0');
    const bNum = parseInt(b.file.split('/').pop()?.split('-')[0] || '0');
    return aNum - bNum;
  });

const currentIndex = sameDateConversations.findIndex(conv => 
  extractSlugFromFile(conv.file) === conversationSlug
);

const prevConversation = currentIndex > 0 ? sameDateConversations[currentIndex - 1] : null;
const nextConversation = currentIndex < sameDateConversations.length - 1 ? sameDateConversations[currentIndex + 1] : null;

const pageTitle = `${frontmatter.title} - ${date}`;
---

<BaseLayout title={pageTitle}>
  <div class="main-content">
    <div class="section-gap">
      <Pwd 
        currentDate={date}
        currentPage="conversation"
        conversationSlug={conversationSlug}
        conversationTitle={frontmatter.title}
        allContent={allContent}
      />
    </div>

    <Cat 
      filename={`${date}/${conversationSlug}`}
      frontmatter={frontmatter}
      Content={Content}
    >
      <div slot="title" class="title-nav">
        {prevConversation ? (
          <a href={`/${date}/${extractSlugFromFile(prevConversation.file)}/`} class="nav-arrow nav-prev" title={prevConversation.frontmatter.title}>
            ←
          </a>
        ) : (
          <span class="nav-arrow disabled">←</span>
        )}
        <h1>{frontmatter.title}</h1>
        {nextConversation ? (
          <a href={`/${date}/${extractSlugFromFile(nextConversation.file)}/`} class="nav-arrow nav-next" title={nextConversation.frontmatter.title}>
            →
          </a>
        ) : (
          <span class="nav-arrow disabled">→</span>
        )}
      </div>
    </Cat>

    <!-- Navigation Commands -->
    <div class="command-block">
      <Prompt command="cd ../" clickable={true} href={createDateUrl(date)} />
      <Prompt command="cd ../../" clickable={true} href="/" />
    </div>
  </div>
</BaseLayout>

